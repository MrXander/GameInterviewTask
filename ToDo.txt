Требования к реализации:
·         Соблюдение соглашений о наименованиях https://msdn.microsoft.com/ru-ru/library/ms229045(v=vs.110).aspx
·         Комментарии в коде и комментарии к публичным методам.
·         Отсутствие ошибок типа warning при компиляции кода.
·         Доказательство работоспособности реализации должно выполняться с помощью unit-тестов.
·         Как минимум 1 функциональный тест.
·         Минимальное использование рефлексии. Если все же рефлексия требуется, то использование должно быть максимально оптимизировано.
Задание 1. Создать веб-приложение игру
Задается количество игроков N (минимум 3).
Один игрок - это пользователь. Остальные N-1 боты.
Игровое поле состоит из N-1 клеток.
Рядом с игровым полем расположена кнопка “Занять”.
Для получения 1 очка необходимо выполнить 3 шага:
1.    Выполнить клик по любой клетке. Клетка выбирается. Данный шаг может выполнить несколько игроков, т.е. несколько игроков может выбрать одну и ту же клетку. Если клетка уже занята другим игроком, то ее все равно можно выбрать.
2.    Затем нужно сделать клик по кнопке “Занять”. Клетка занимается игроком, который первый успел кликнуть по кнопке “Занять” среди всех игроков, кто выбрал клетку. У всех остальных игроков выбор клетки сбрасывается.
3.    Затем нужно вновь сделать клик по этой же клетке. Начисляется 1 очко. Если между шагами 2-3 текущего игрока какой либо другой игрок успел выполнить шаги 1-2, то клетку занимает этот другой игрок, а у текущего сбрасывается выбор клетки.
Общий смысл в следующем: нужно успеть кликнуть сначала по клетке, затем по кнопке, затем опять по клетке, пока какой-либо другой игрок не успел сделать это.
Игра идет до N*3 очков.
Приложение должно вести статистику игр в БД: SQLite, SQLExpress или другой аналог.
Поля статистики:
·         Дата+время начала игры
·         Длительность
·         Кол-во игроков
·         Первые 3 места и кол-во очков
Приложение должно на отдельной странице показывать эту статистику.
 
Дополнительные требования к реализации:
·         ASP.NET MVC 5.
·         Боты должны работать в асинхронных потоках.
·         Логика игры должна быть реализована на стороне сервера. Процесс игры также должен выполняться на стороне сервера.
·         Обновление UI должно выполняться с помощью SignalR.
·         На фронте должен использоваться какой-либо фреймворк: AngularJS, ExtJS, KnockoutJS, ReactJS.
·         Перезапуск пула веб-приложения не должен приводить к потере данных. Игра должна продолжаться.
·         Приложение должно быть покрыто автоматическими тестами